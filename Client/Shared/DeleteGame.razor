@using Marshmellowmed_EllaShartiel_NectarShavit_RoniEbenEzra.Shared.Entities
@inject IDialogService DialogService
@inject HttpClient Http

<MudDialog>
    <DialogContent>
        @*<MudText>@ContentText</MudText>*@
        <MudText>המשחק "@GameToDelete.GameName" וכל התוכן שבו ימחק ולא יהיה ניתן לשחזור.</MudText>
        <MudText>האם ברצונך להמשיך?</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">ביטול</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">מחיקה</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public Game GameToDelete { get; set; }

    [Parameter] public EventCallback<Game> DeletedGame { get; set; }

    void Cancel() => MudDialog.Cancel();

    async Task Submit()
    {
        //אם יש פריטים עם תמונות שצריך למחוק אותם
        List<string> imagesToDelete = new List<string>();
        foreach (Category c in GameToDelete.GameCategories)
        {
            foreach(Item i in c.CategoryItems)
            {
                if (i.ItemContent.StartsWith("uploaded")==true)
                {
                    imagesToDelete.Add(i.ItemContent);
                }
            }
        }
        if (imagesToDelete.Count() > 0)
        {
            var imgdeleteResponse = await Http.PostAsJsonAsync("api/Items/deleteImages", imagesToDelete); //מחיקת התמונה
            if (imgdeleteResponse.IsSuccessStatusCode == true) //אם המחיקה הצליחה
            {
                Console.WriteLine(imgdeleteResponse.Content.ReadAsStringAsync().Result);
            }
            else
            {
                Console.WriteLine(imgdeleteResponse.Content.ReadAsStringAsync().Result);
            }
        }


        var deleteResponse = await Http.DeleteAsync("api/Games/" + GameToDelete.ID);

        bool isDeleted = deleteResponse.Content.ReadFromJsonAsync<bool>().Result;

        if (isDeleted == true && deleteResponse.IsSuccessStatusCode == true)
        {
            await DeletedGame.InvokeAsync(GameToDelete);
        }
        else
        {
            //WorkersList = new List<Worker>();
        }

        MudDialog.Close(DialogResult.Ok(true));

    }
}