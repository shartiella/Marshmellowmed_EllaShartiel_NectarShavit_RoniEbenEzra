@using Marshmellowmed_EllaShartiel_NectarShavit_RoniEbenEzra.Shared.Entities
@inject IDialogService DialogService
@inject HttpClient Http

<MudDialog>
    <DialogContent>
        @*<MudText>@ContentText</MudText>*@
        <MudText>הקטגוריה "@CategoryToDelete.CategoryName" וכל הפריטים השייכים לה ימחקו ולא יהיה ניתן לשחזר אותם.</MudText>
        <MudText>האם ברצונך להמשיך?</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">ביטול</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">מחיקה</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public Category CategoryToDelete { get; set; }

    [Parameter] public EventCallback<Category> DeletedCategory { get; set; }

    List<Item> itemsToDelete = new List<Item>();
    List<string> imagesToDelete = new List<string>();

    void Cancel() => MudDialog.Cancel();

    protected override void OnInitialized()
    {
        itemsToDelete = CategoryToDelete.CategoryItems;
        foreach (Item i in itemsToDelete)
        {
            if (i.IsPicture == true && i.ItemContent.StartsWith("uploaded"))
            {
                imagesToDelete.Add(i.ItemContent);//הוספת תמונת הפריט הנוכחי למחיקה
            }
        }

    }

    async Task Submit()
    {
        //אם יש פריטים עם תמונות שצריך למחוק אותם
        if (imagesToDelete.Count() > 0)
        {
            var imgdeleteResponse = await Http.PostAsJsonAsync("api/Items/deleteImages", imagesToDelete); //מחיקת התמונה
            if (imgdeleteResponse.IsSuccessStatusCode == true) //אם המחיקה הצליחה
            {
                //Console.WriteLine(imgdeleteResponse.Content.ReadAsStringAsync().Result);
            }
            else
            {
                //Console.WriteLine(imgdeleteResponse.Content.ReadAsStringAsync().Result);
            }
        }


        var deleteResponse = await Http.DeleteAsync("api/Categories/" + CategoryToDelete.ID);

        bool isDeleted = deleteResponse.Content.ReadFromJsonAsync<bool>().Result;

        if (isDeleted == true && deleteResponse.IsSuccessStatusCode == true)
        {
            await DeletedCategory.InvokeAsync(CategoryToDelete);
        }
        else
        {
            var parameters = new DialogParameters();
            parameters.Add("Content", deleteResponse.Content.ReadAsStringAsync().Result);
            var options = new DialogOptions() { DisableBackdropClick = true };
            DialogService.Show<Error>("שגיאה", parameters, options);
        }

        MudDialog.Close(DialogResult.Ok(true));

    }
}